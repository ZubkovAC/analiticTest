{"version":3,"sources":["UI/task.module.css","state/functionReducer.tsx","state/tasksReducer.tsx","UI/task.tsx","UI/generateTasks.tsx","UI/inputName.tsx","UI/completedTask.tsx","UI/answerTask.tsx","UI/error404.tsx","utils/Redirect.tsx","App.tsx","reportWebVitals.ts","state/store.ts","index.tsx"],"names":["module","exports","questionUser","correctAnswers","answersUser","i","arr","randomAnswer","push","1","2","index","id","answerUser","term","addend","symbol","equally","correctAnswer","question","calculation","Math","round","random","sumbol","answer","valueFirst","valueLast","toFixed","calcAnswer","toString","initialState","nameUser","exampleTasks","validateAnswerUser","authorized","styleInput","width","margin","Task","React","memo","props","dispatch","useDispatch","useState","value","setValue","error","setError","keyUser","Object","values","task","className","css","line","map","cell","type","style","onBlur","onChange","e","currentTarget","color","GenerateTasks","useSelector","state","tasks","disabled","some","v","preTable","to","RoutePath","ANSWER","LinkDisable","Link","onClick","Search","Input","InputName","LEARN","direction","placeholder","allowClear","enterButton","size","onSearch","trim","name","changeName","OmpletedTask","valueUser","shift","backgroundColor","lineAnswer","key","line_s","AnswerTask","score","x","length","Table","Error404","HOME_RAGE","Authorized","children","ERROR_404","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","questionsUser","a","val","questionRestart","store","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c34253d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preTable\":\"task_preTable__1nWHB\",\"Table\":\"task_Table__1PpnU\",\"line\":\"task_line__3mooT\",\"lineAnswer\":\"task_lineAnswer__PQsA6\",\"cell\":\"task_cell__NMA-W\",\"line_s\":\"task_line_s__QKuyl\",\"number\":\"task_number__3-hro\",\"input_style\":\"task_input_style__2T-Vt\",\"Link\":\"task_Link__3Lcd6\",\"LinkDisable\":\"task_LinkDisable__3UTxr\"};","import {AnswerUser, ExampType} from \"./tasksReducer\";\r\n\r\nexport function questionUser() {\r\n    const correctAnswers = []\r\n    const answersUser = []\r\n    for (let i = 0; i < 10; i++) {\r\n        let arr = randomAnswer(i)\r\n        correctAnswers.push(arr[1])\r\n        answersUser.push(arr[2])\r\n    }\r\n    return {\r\n        1: correctAnswers,\r\n        2: answersUser\r\n    }\r\n}\r\n\r\nexport function calcAnswer(calculation: string, valueFirst: number, valueLast: number) {\r\n    if (calculation === '+') return valueFirst + valueLast\r\n    if (calculation === '-') return valueFirst - valueLast\r\n    if (calculation === '*') return valueFirst * valueLast\r\n    if (calculation === '/') return +(valueFirst / valueLast).toFixed(2)\r\n    return 0\r\n}\r\n\r\nexport function randomAnswer(index: number,) {\r\n    const correctAnswers: AnswerUser = {\r\n        id: index,\r\n        answerUser: '',\r\n        term: 0,\r\n        addend: 0,\r\n        symbol: '',\r\n        equally: '='\r\n    }\r\n    const correctAnswer: ExampType = {\r\n        id: index,\r\n        question: {\r\n            term: 0,\r\n            symbol: '',\r\n            addend: 0,\r\n            equally: '='\r\n        },\r\n        correctAnswers: correctAnswers\r\n    }\r\n\r\n    let calculation = ''\r\n    let term = Math.round(Math.random() * 100)\r\n    let addend = Math.round(Math.random() * 100)\r\n    let sumbol = Math.round(Math.random() * 100)\r\n    if (sumbol >= 0 && sumbol <= 25) calculation = '+'\r\n    if (sumbol >= 26 && sumbol <= 50) calculation = '-'\r\n    if (sumbol >= 51 && sumbol <= 75) calculation = '*'\r\n    if (sumbol >= 76 && sumbol <= 100) calculation = '/'\r\n    correctAnswer.id = index\r\n    correctAnswer.question.term = term\r\n    correctAnswer.question.addend = addend\r\n    correctAnswer.question.symbol = calculation\r\n    const answer = calcAnswer(calculation, term, addend)\r\n    correctAnswers.answerUser = answer.toString()\r\n\r\n    const answerUser: AnswerUser = {\r\n        id: index,\r\n        term: 0,\r\n        symbol: '',\r\n        addend: 0,\r\n        equally: '=',\r\n        answerUser: ''\r\n    }\r\n    answerUser.term = term\r\n    answerUser.addend = addend\r\n    answerUser.symbol = calculation\r\n\r\n    return {\r\n        1: correctAnswer,\r\n        2: answerUser\r\n    }\r\n}\r\n\r\n","import {questionUser} from \"./functionReducer\";\r\n\r\nlet initialState = {\r\n    nameUser: '',\r\n    exampleTasks: [] as Array<ExampType>,\r\n    validateAnswerUser: [] as Array<AnswerUser>,\r\n    authorized: false,\r\n}\r\n\r\nexport const tasksReducer = (state = initialState, action: ActionType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'data/NAME':\r\n            const questionsUser = questionUser()\r\n            return {\r\n                ...state,\r\n                nameUser: action.name,\r\n                exampleTasks: [...questionsUser[1]],\r\n                validateAnswerUser: [...questionsUser[2]],\r\n                authorized: true\r\n            }\r\n        case \"data/ANSWER\":\r\n            return {\r\n                ...state,\r\n                validateAnswerUser: state.validateAnswerUser.map(a => {\r\n                    if (a.id === action.id) return {\r\n                        ...a,\r\n                        answerUser: action.answer\r\n                    }\r\n                    return a\r\n                })\r\n            }\r\n        case \"data/TEST_ANSWER\":\r\n            return {\r\n                ...state,\r\n                validateAnswerUser: state.validateAnswerUser.map( (val,index) =>({\r\n                    ...val,\r\n                    answer: val.answerUser === state.exampleTasks[index].correctAnswers.answerUser\r\n                }))\r\n            }\r\n        case \"data/RESTART\":\r\n            const questionRestart = questionUser()\r\n            return {\r\n                ...state,\r\n                exampleTasks: [...questionRestart[1]],\r\n                validateAnswerUser: [...questionRestart[2]],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// AC\r\nexport const start = (name: string) => ({type: 'data/NAME', name} as const)\r\nexport const setAnswer = (id: number, answer: string) => ({type: 'data/ANSWER', id, answer} as const)\r\nexport const testAnswerUser = () => ({type: 'data/TEST_ANSWER'} as const)\r\nexport const restart = () => ({type: 'data/RESTART'} as const)\r\n\r\n// Type\r\ntype TasksStateType = typeof initialState\r\n\r\nexport type ActionType =\r\n    ReturnType<typeof start> |\r\n    ReturnType<typeof setAnswer> |\r\n    ReturnType<typeof testAnswerUser> |\r\n    ReturnType<typeof restart>\r\n\r\nexport type ExampType = {\r\n    id: number\r\n    question: QuestionType,\r\n    correctAnswers: AnswerUser\r\n}\r\nexport type QuestionType = {\r\n    term: number\r\n    addend: number\r\n    symbol: string\r\n    equally: string\r\n    answer?: boolean\r\n}\r\nexport type AnswerUser = {\r\n    id: number\r\n    answerUser: string\r\n    term: number\r\n    addend: number\r\n    symbol: string\r\n    equally: string\r\n    answer?: boolean\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport {ExampType, setAnswer} from '../state/tasksReducer';\r\nimport {useDispatch} from \"react-redux\";\r\nimport css from './task.module.css'\r\n\r\ntype TablePropsType = {\r\n    index: number\r\n    task: ExampType\r\n}\r\nconst styleInput = {\r\n    width: '100px',\r\n    margin: '10px'\r\n}\r\n\r\nexport const Task = React.memo((props: TablePropsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState<string>('')\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n\r\n    const keyUser = Object.values(props.task.question)\r\n\r\n    const answerUser = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setAnswer(props.index, e.currentTarget.value))\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={css.line}>\r\n            {\r\n                keyUser.map((task, index) =>(\r\n                    <span className={css.cell} key={index}>{task}</span>\r\n                ))\r\n            }\r\n            <input\r\n                type=\"number\"\r\n                style={styleInput}\r\n                onBlur={() => setError(true)}\r\n                value={value}\r\n                onChange={answerUser}\r\n            />\r\n            {error && !value && <span style={{color: 'red'}}>enter the value</span>}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../state/store\";\r\nimport css from './task.module.css'\r\nimport {AnswerUser, ExampType, testAnswerUser} from \"../state/tasksReducer\";\r\nimport {Task} from \"./task\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutePath} from \"../App\";\r\n\r\nexport const GenerateTasks = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const nameUser = useSelector<AppStateType, string>(state => state.tasks.nameUser)\r\n    const exampleTasks = useSelector<AppStateType, Array<ExampType>>(state => state.tasks.exampleTasks)\r\n    const validateAnswerUser = useSelector<AppStateType, Array<AnswerUser>>(state => state.tasks.validateAnswerUser)\r\n\r\n    const testing = () => {\r\n        dispatch(testAnswerUser())\r\n    }\r\n\r\n    const disabled = validateAnswerUser.some(v => !v.answerUser)\r\n\r\n    return (\r\n        <div>\r\n            <div className={css.preTable}>\r\n                <h2>{nameUser}</h2>\r\n                <div>\r\n                    <h2>Solve the Tasks:</h2>\r\n                    <h4>* при делении: 2 знака после точки</h4>\r\n                    <div>\r\n                        {\r\n                            exampleTasks.map((task, index) => (\r\n                                <Task key={task.id} task={task} index={index}/>))\r\n                        }\r\n                    </div>\r\n                    <div style={{margin:'15px'}}>\r\n                        <NavLink\r\n                            to={RoutePath.ANSWER}\r\n                            className={!disabled? css.Link : css.LinkDisable}\r\n                            onClick={testing}\r\n                        >\r\n                            testing\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {start} from \"../state/tasksReducer\";\r\nimport {Input, Space} from \"antd\";\r\nimport 'antd/dist/antd.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../state/store\";\r\nimport {RoutePath} from \"../App\";\r\n\r\nconst {Search} = Input\r\n\r\nexport const InputName = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const authorized = useSelector<AppStateType,boolean>(state => state.tasks.authorized)\r\n\r\n    const changeName = (value: string) => {\r\n        if(value.trim()){\r\n            dispatch(start(value))\r\n        }\r\n    }\r\n\r\n    if (authorized) return <Redirect to={RoutePath.LEARN}/>;\r\n\r\n    return (\r\n        <div>\r\n            <Space direction=\"vertical\">\r\n                <h3>Введите свое имя :</h3>\r\n                <Search\r\n                    placeholder=\"input search text\"\r\n                    allowClear\r\n                    enterButton=\"Search\"\r\n                    size=\"large\"\r\n                    onSearch={(value) => changeName(value)}\r\n                />\r\n            </Space>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport css from './task.module.css'\r\nimport {AnswerUser} from \"../state/tasksReducer\";\r\n\r\ntype TaskPropsType = {\r\n    task: AnswerUser\r\n    color: boolean | undefined\r\n}\r\n\r\nexport const OmpletedTask = (props: TaskPropsType) => {\r\n\r\n    const valueUser = Object.values(props.task)\r\n    valueUser.shift()\r\n\r\n    return (\r\n        <span style={{backgroundColor: props.color ? \"lightgreen\" : 'lightcoral'}} className={css.lineAnswer}>\r\n            {\r\n                valueUser.map((key, index) => (\r\n                    <span\r\n                        className={css.line_s}\r\n                        key={index}\r\n                    >\r\n                        {typeof (key) !== 'boolean'\r\n                            ? ''\r\n                            : key\r\n                                ? 'Correctly'\r\n                                : 'Wrong Answer'\r\n                        }\r\n                        {key}\r\n                    </span>\r\n                ))\r\n            }\r\n        </span>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../state/store\";\r\nimport {OmpletedTask} from \"./completedTask\";\r\nimport css from './task.module.css'\r\nimport {AnswerUser, restart} from \"../state/tasksReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutePath} from \"../App\";\r\n\r\nexport const AnswerTask = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const nameUser = useSelector<AppStateType, string>(state => state.tasks.nameUser)\r\n    const validateAnswerUser = useSelector<AppStateType, Array<AnswerUser>>(state => state.tasks.validateAnswerUser)\r\n\r\n    const restartQuestion = () => {\r\n        dispatch(restart())\r\n    }\r\n\r\n    let score = 0\r\n    for (let x = 0; x < validateAnswerUser.length; x++) {\r\n        if (validateAnswerUser[x].answer) score++\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={css.preTable}>\r\n                <div className={css.Table}>\r\n                    <h2>Answers to Tasks</h2>\r\n                    <span>\r\n                        {validateAnswerUser.map((task, index) => (\r\n                            <div key={index}>\r\n                                <OmpletedTask\r\n                                    key={task.id}\r\n                                    task={task}\r\n                                    color={validateAnswerUser[index].answer}\r\n                                />\r\n\r\n                            </div>\r\n                        ))\r\n                        }\r\n                        {\r\n                            score <= 7\r\n                                ? <div>\r\n                                    <h2>{nameUser} - Молодец, Тренируйся и у тебя все получится!</h2>\r\n                                    <h3>Правильных ответов: {score} , Ошибочных :{10 - score}</h3>\r\n                                </div>\r\n                                : <div>\r\n                                    <h2>{nameUser} Красавчик , повторим еще?</h2>\r\n                                    <h3>Правильных ответов: {score} , Ошибочных :{10 - score}</h3>\r\n                                </div>\r\n                         }\r\n                    </span>\r\n                    <div>\r\n                        <NavLink\r\n                            to={RoutePath.LEARN}\r\n                            onClick={restartQuestion}\r\n                            className={css.Link}\r\n                        >\r\n                            restart\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RoutePath} from \"../App\";\r\nimport css from \"./task.module.css\";\r\nimport {restart} from \"../state/tasksReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const Error404 = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const testing = () => {\r\n        dispatch(restart())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Error 404</h1>\r\n            <NavLink\r\n                to={RoutePath.HOME_RAGE}\r\n                className={css.Link}\r\n                onClick={testing}\r\n            >\r\n                Go Home\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {RoutePath} from \"../App\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../state/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\ntype AuthorizedPropsType = {\r\n    children:any\r\n}\r\n\r\nexport const Authorized = (props:AuthorizedPropsType) =>{\r\n\r\n    const authorized = useSelector<AppStateType, boolean>(state => state.tasks.authorized)\r\n\r\n    if (!authorized) return <Redirect to={RoutePath.HOME_RAGE}/>;\r\n    return (\r\n        <div >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {GenerateTasks} from \"./UI/generateTasks\";\nimport {InputName} from \"./UI/inputName\";\nimport { Route, Switch} from \"react-router-dom\";\nimport {AnswerTask} from './UI/answerTask';\nimport {Error404} from \"./UI/error404\";\nimport {Authorized} from \"./utils/Redirect\";\n\nexport const RoutePath = {\n    HOME_RAGE: '/',\n    LEARN: \"/learn\",\n    ANSWER: '/answer',\n    ERROR_404: '*',\n}\n\nexport const App = () => {\n\n    return (\n        <div className=\"App\">\n             <Switch>\n                <Route exact path={RoutePath.HOME_RAGE} render={() =><InputName />} />\n                <Route exact path={RoutePath.LEARN} render={() => <Authorized children={<GenerateTasks />} /> }/>\n                <Route exact path={RoutePath.ANSWER} render={() =><Authorized children={<AnswerTask />}/> }/>\n\n                <Route path={RoutePath.ERROR_404} render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {tasksReducer} from \"./tasksReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    tasks:tasksReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./state/store\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}